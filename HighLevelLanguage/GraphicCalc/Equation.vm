function Equation.new 0
push constant 17
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 5
push constant 0
pop this 6
push constant 0
pop this 7
push constant 0
pop this 8
push argument 0
pop this 4
push argument 1
pop this 11
push pointer 0
return
function Equation.init 0
call Const.i1 0
call Const.i1 0
call Fraction.new 2
pop static 0
call Const.i1 0
call Const.i1 0
call Fraction.new 2
pop static 1
call Const.i1 0
call Const.i1 0
call Fraction.new 2
pop static 2
call Const.i1 0
call Const.i1 0
call Fraction.new 2
pop static 3
call Const.i1 0
call Const.i1 0
call Fraction.new 2
pop static 4
call Const.i1 0
call Const.i1 0
call Fraction.new 2
pop static 5
call Const.i1 0
call Const.i1 0
call Fraction.new 2
pop static 6
call Const.i1 0
call Const.i1 0
call Fraction.new 2
pop static 7
call Const.i1 0
call Const.i1 0
call Fraction.new 2
pop static 8
call Const.i1 0
call Const.i1 0
call Fraction.new 2
pop static 9
call Const.i1 0
call Const.i1 0
call Fraction.new 2
pop static 10
push constant 0
not
push constant 1
call Int.new 2
pop static 11
push constant 0
not
push constant 1
call Int.new 2
pop static 12
push constant 0
not
push constant 1
call Int.new 2
pop static 13
push constant 0
not
push constant 1
call Int.new 2
pop static 14
push constant 0
not
push constant 1
call Int.new 2
pop static 15
push constant 0
not
push constant 1
call Int.new 2
pop static 16
push constant 0
return
function Equation.deInit 0
push static 0
call Fraction.dispose 1
pop temp 0
push static 1
call Fraction.dispose 1
pop temp 0
push static 2
call Fraction.dispose 1
pop temp 0
push static 3
call Fraction.dispose 1
pop temp 0
push static 4
call Fraction.dispose 1
pop temp 0
push static 5
call Fraction.dispose 1
pop temp 0
call scale.dispose 0
pop temp 0
push static 6
call Fraction.dispose 1
pop temp 0
push static 7
call Fraction.dispose 1
pop temp 0
push static 8
call Fraction.dispose 1
pop temp 0
push static 9
call Fraction.dispose 1
pop temp 0
push static 10
call Fraction.dispose 1
pop temp 0
push static 11
call Int.dispose 1
pop temp 0
push static 12
call Int.dispose 1
pop temp 0
push static 13
call Int.dispose 1
pop temp 0
push static 14
call Int.dispose 1
pop temp 0
push static 15
call Int.dispose 1
pop temp 0
push static 16
call Int.dispose 1
pop temp 0
push constant 0
return
function Equation.convertToSlopeIntercept 2
push argument 0
call Equation.getFormat 1
pop local 0
push local 0
call Const.sI 0
call S.equals 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
label IF_FALSE0
push argument 0
call Equation.getX 1
pop static 0
push argument 0
call Equation.getY 1
pop static 1
push constant 1
call Const.sI 0
call Equation.new 2
pop local 1
push local 0
call Const.sS 0
call S.equals 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 0
push static 1
call Fraction.dividedBy 2
pop static 3
push static 3
push static 3
call Fraction.pos 1
not
call Fraction.setPos 2
pop temp 0
push argument 0
call Equation.getB 1
pop static 2
push static 2
push static 1
call Fraction.dividedBy 2
pop static 4
goto IF_END1
label IF_FALSE1
push argument 0
call Equation.getSlope 1
pop static 3
call Const.i1 0
call Const.i1 0
call Fraction.new 2
pop static 5
push static 3
push argument 0
call Equation.getX 1
push static 5
push static 11
push static 12
push static 13
push static 14
push static 15
push static 16
call Fraction.multiply 9
pop temp 0
push static 1
push static 5
call Fraction.minus 2
pop static 4
label IF_END1
push local 1
push static 3
call Equation.setSlope 2
pop temp 0
push local 1
push static 4
call Equation.setB 2
pop temp 0
push local 1
return
function Equation.getX 0
push argument 0
pop pointer 0
push this 12
return
function Equation.getY 0
push argument 0
pop pointer 0
push this 13
return
function Equation.getB 0
push argument 0
pop pointer 0
push this 14
return
function Equation.getSlope 0
push argument 0
pop pointer 0
push this 15
return
function Equation.getScale 0
push argument 0
pop pointer 0
push this 16
return
function Equation.getXIsScreenCutoff 0
push argument 0
pop pointer 0
push this 9
return
function Equation.getStartLineNegative 0
push argument 0
pop pointer 0
push this 10
return
function Equation.getFormat 0
push argument 0
pop pointer 0
push this 11
return
function Equation.setX 0
push argument 0
pop pointer 0
push argument 1
pop this 12
push constant 0
not
pop this 5
push constant 0
return
function Equation.setY 0
push argument 0
pop pointer 0
push argument 1
pop this 13
push constant 0
not
pop this 6
push constant 0
return
function Equation.setB 0
push argument 0
pop pointer 0
push argument 1
pop this 14
push constant 0
not
pop this 7
push constant 0
return
function Equation.setSlope 0
push argument 0
pop pointer 0
push argument 1
pop this 15
push constant 0
not
pop this 8
push constant 0
return
function Equation.setScale 0
push argument 0
pop pointer 0
push argument 1
pop this 16
push constant 0
return
function Equation.setXIsScreenCutoff 0
push argument 0
pop pointer 0
push argument 1
pop this 9
push constant 0
return
function Equation.setStartLineNegative 0
push argument 0
pop pointer 0
push argument 1
pop this 10
push constant 0
return
function Equation.solveForY 0
push argument 0
pop pointer 0
push this 11
call Const.sI 0
call S.equals 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 15
push argument 1
push static 6
push static 11
push static 12
push static 13
push static 14
push static 15
push static 16
call Fraction.multiply 9
pop temp 0
push static 6
push this 14
call Fraction.plus 2
pop static 7
push static 7
return
label IF_FALSE0
push this 11
call Const.sP 0
call S.equals 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 12
push argument 1
call Fraction.minus 2
pop static 6
push this 15
push static 6
push static 7
push static 11
push static 12
push static 13
push static 14
push static 15
push static 16
call Fraction.multiply 9
pop temp 0
push this 13
push static 7
call Fraction.minus 2
pop static 8
push static 8
return
label IF_FALSE1
push this 11
call Const.sS 0
call S.equals 2
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 12
push argument 1
push static 6
push static 11
push static 12
push static 13
push static 14
push static 15
push static 16
call Fraction.multiply 9
pop temp 0
push this 14
push static 6
call Fraction.minus 2
pop static 7
push static 7
push this 13
call Fraction.dividedBy 2
pop static 8
push static 8
return
label IF_FALSE2
call Sys.halt 0
pop temp 0
call Const.f1 0
return
function Equation.solveForX 0
push argument 0
pop pointer 0
push this 11
call Const.sI 0
call S.equals 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push this 14
call Fraction.minus 2
pop static 6
push static 6
push this 15
call Fraction.dividedBy 2
pop static 7
push static 7
return
label IF_FALSE0
push this 11
call Const.sP 0
call S.equals 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 13
push argument 1
call Fraction.minus 2
pop static 6
push static 6
push this 15
call Fraction.dividedBy 2
pop static 7
push this 12
push static 7
call Fraction.minus 2
pop static 8
push static 8
return
label IF_FALSE1
push this 11
call Const.sS 0
call S.equals 2
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 13
push argument 1
push static 6
push static 11
push static 12
push static 13
push static 14
push static 15
push static 16
call Fraction.multiply 9
pop temp 0
push this 14
push static 6
call Fraction.minus 2
pop static 7
push static 7
push this 12
call Fraction.dividedBy 2
pop static 8
push static 8
return
label IF_FALSE2
push constant 0
push constant 1
call Fraction.new 2
return
function Equation.getYIntercept 0
push argument 0
pop pointer 0
push static 6
call Const.i0 0
call Const.i1 0
call Fraction.set 3
pop temp 0
push pointer 0
push static 6
call Equation.solveForY 2
pop static 7
push static 7
return
function Equation.getXIntercept 0
push argument 0
pop pointer 0
push static 6
call Const.i0 0
call Const.i1 0
call Fraction.set 3
pop temp 0
push pointer 0
push static 6
call Equation.solveForX 2
pop static 7
push static 7
return
function Equation.getValues 0
push argument 0
pop pointer 0
push this 11
call Const.sP 0
call S.equals 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Const.sY 0
call Equation.inputVar 2
pop temp 0
push pointer 0
call Const.sM 0
call Equation.inputVar 2
pop temp 0
push pointer 0
call Const.sX 0
call Equation.inputVar 2
pop temp 0
push constant 0
return
label IF_FALSE0
push this 11
call Const.sI 0
call S.equals 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Const.sM 0
call Equation.inputVar 2
pop temp 0
push pointer 0
call Const.sB 0
call Equation.inputVar 2
pop temp 0
push constant 0
return
label IF_FALSE1
push this 11
call Const.sS 0
call S.equals 2
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Const.sX 0
call Equation.inputVar 2
pop temp 0
push pointer 0
call Const.sY 0
call Equation.inputVar 2
pop temp 0
push pointer 0
call Const.sB 0
call Equation.inputVar 2
pop temp 0
push constant 0
return
label IF_FALSE2
push constant 0
return
function Equation.inputVar 5
push argument 0
pop pointer 0
push argument 1
call Const.sX 0
call S.equals 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 11
call String.new 1
push constant 69
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 58
call String.appendChar 2
call Keyboard.readLine 1
pop local 0
push local 0
call Fraction.toFraction 1
pop this 12
push this 12
pop local 4
push constant 0
not
pop this 5
label IF_FALSE0
push argument 1
call Const.sY 0
call S.equals 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 10
call String.new 1
push constant 69
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 58
call String.appendChar 2
call Keyboard.readLine 1
pop local 1
push local 1
call Fraction.toFraction 1
pop this 13
push constant 0
not
pop this 6
push this 13
pop local 4
label IF_FALSE1
push argument 1
call Const.sB 0
call S.equals 2
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 19
call String.new 1
push constant 69
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
call Keyboard.readLine 1
pop local 2
push local 2
call Fraction.toFraction 1
pop this 14
push constant 0
not
pop this 7
push this 14
pop local 4
label IF_FALSE2
push argument 1
call Const.sM 0
call S.equals 2
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 14
call String.new 1
push constant 69
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
call Keyboard.readLine 1
pop local 3
push local 3
call Fraction.toFraction 1
pop this 15
push constant 0
not
pop this 8
push this 15
pop local 4
label IF_FALSE3
push constant 0
return
function Equation.toString 0
push argument 0
pop pointer 0
push this 4
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 11
call Const.sS 0
call S.equals 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Equation.getStandardString 1
return
label IF_FALSE1
push this 11
call Const.sI 0
call S.equals 2
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Equation.getSlopeInterceptString 1
return
label IF_FALSE2
push this 11
call Const.sP 0
call S.equals 2
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Equation.getPointSlopeString 1
return
label IF_FALSE3
label IF_FALSE0
push constant 1
call String.new 1
push constant 120
call String.appendChar 2
return
function Equation.getSlopeInterceptString 3
push argument 0
pop pointer 0
push this 8
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 15
call Fraction.toString 1
pop local 0
goto IF_END0
label IF_FALSE0
push constant 1
call String.new 1
push constant 95
call String.appendChar 2
pop local 0
label IF_END0
push this 7
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 14
call Fraction.toString 1
pop local 1
goto IF_END1
label IF_FALSE1
push constant 1
call String.new 1
push constant 95
call String.appendChar 2
pop local 1
label IF_END1
push constant 4
call String.new 1
push constant 121
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 32
call String.appendChar 2
push local 0
push constant 4
call String.new 1
push constant 120
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 43
call String.appendChar 2
push constant 32
call String.appendChar 2
push local 1
call S.append4 4
pop local 2
push local 2
return
function Equation.getPointSlopeString 4
push argument 0
pop pointer 0
push this 6
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 13
call Fraction.toString 1
pop local 1
goto IF_END0
label IF_FALSE0
push constant 1
call String.new 1
push constant 95
call String.appendChar 2
pop local 1
label IF_END0
push this 8
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 15
call Fraction.toString 1
pop local 2
goto IF_END1
label IF_FALSE1
push constant 1
call String.new 1
push constant 95
call String.appendChar 2
pop local 2
label IF_END1
push this 5
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 12
call Fraction.toString 1
pop local 0
goto IF_END2
label IF_FALSE2
push constant 1
call String.new 1
push constant 95
call String.appendChar 2
pop local 0
label IF_END2
push constant 5
call String.new 1
push constant 40
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 45
call String.appendChar 2
push constant 32
call String.appendChar 2
push local 1
push constant 4
call String.new 1
push constant 41
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 32
call String.appendChar 2
push local 2
push constant 5
call String.new 1
push constant 40
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 45
call String.appendChar 2
push constant 32
call String.appendChar 2
push local 0
push constant 1
call String.new 1
push constant 41
call String.appendChar 2
call S.append7 7
pop local 3
push local 3
return
function Equation.getStandardString 4
push argument 0
pop pointer 0
push this 5
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 12
call Fraction.toString 1
pop local 0
goto IF_END0
label IF_FALSE0
push constant 1
call String.new 1
push constant 95
call String.appendChar 2
pop local 0
label IF_END0
push this 6
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 13
call Fraction.toString 1
pop local 1
goto IF_END1
label IF_FALSE1
push constant 1
call String.new 1
push constant 95
call String.appendChar 2
pop local 1
label IF_END1
push this 7
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 14
call Fraction.toString 1
pop local 2
goto IF_END2
label IF_FALSE2
push constant 1
call String.new 1
push constant 95
call String.appendChar 2
pop local 2
label IF_END2
push local 0
push constant 4
call String.new 1
push constant 120
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 43
call String.appendChar 2
push constant 32
call String.appendChar 2
push local 1
push constant 4
call String.new 1
push constant 121
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 32
call String.appendChar 2
push local 2
call S.append5 5
pop local 3
push local 3
return
function Equation.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
